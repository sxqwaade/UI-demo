@charset "utf-8";
@import 'compass/reset';
@import 'compass/utilities/sprites';

$sprites:sprite-map("remSprites/images/*.png", $spacing:10px, $layout: vertical);
$divide: 10;
$ppr: 640px/$divide/1rem;
$pprVal: 640/10;
// 去单位
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@function addRemUnit($val, $unit: px) {
  @if $val !=0 {
    $val: $val/$pprVal;
    $val: $val + rem;
  }
  @return $val;
}

// 将图片精灵的图片大小和位置进行缩放。实现方式通过把单位由px变成rem
@mixin rem-sprite($sprites, $name) {
  background-repeat: no-repeat;
  background-image: sprite-url($sprites); //雪碧图路径
  background-position: addRemUnit(strip-units(nth(sprite-position($sprites, $name), 1))) addRemUnit(strip-units(nth(sprite-position($sprites, $name), 2)));
  background-size: sprite-width($sprites)/$ppr sprite-height($sprites)/$ppr;
}

@mixin rem-sprite-size($sprites, $name) {
  height: image-width(sprite-file($sprites, $name))/$ppr; //目标图片高度
  width: image-height(sprite-file($sprites, $name))/$ppr; //目标图片宽度
}

//$offset-x的正值向右移，$offset-y的正值向下移
@mixin rem-sprite-pos($sprites, $name, $offset-x: 0, $offset-y: 0) {
  background-position: addRemUnit(strip-units(nth(sprite-position($sprites, $name), 1)) + $offset-x) addRemUnit(strip-units(nth(sprite-position($sprites, $name), 2)) + $offset-y);
}

$sprites_img:0, 45, 89, 134, 179, 224, 269, 314, 358, 403;
@for $i from 0 through (length($sprites_img)-1){
  .icon-#{$i} {
    @include rem-sprite($sprites, $i);
    @include rem-sprite-size($sprites,$i);
    //@include rem-sprite-pos($sprites,$i,0,nth($sprites_img,($i+1)));
  }
}